{"ast":null,"code":"import { useEffect, useReducer } from 'react';\nconst initialState = {\n  list: [{\n    id: 1,\n    listName: 'Read File',\n    todos: [{\n      name: 'read all',\n      status: 'completed'\n    }, {\n      name: 'read important',\n      status: 'active'\n    }]\n  }, {\n    id: 2,\n    listName: 'Fantasy Football',\n    todos: [{\n      name: 'Play Football',\n      status: 'completed'\n    }, {\n      name: 'Watch Football',\n      status: 'active'\n    }]\n  }, {\n    id: 3,\n    listName: 'Fantasy Cricket',\n    todos: [{\n      name: 'Play Cricket',\n      status: 'completed'\n    }, {\n      name: 'Watch Cricket',\n      status: 'active'\n    }]\n  }]\n};\n\nfunction syncStorage(state) {\n  if (window && window.localStorage) {\n    window.localStorage.setItem('appState', JSON.stringify(state));\n  }\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'read_storage':\n      if (window && window.localStorage) {\n        const state = window.localStorage.getItem('appState');\n\n        if (state && state !== 'undefined') {\n          return JSON.parse(state);\n        }\n      }\n\n      return initialState;\n\n    case 'add_todo':\n      const {\n        newTodos\n      } = action;\n      return {\n        list: state.list.map(item => {\n          if (item.id === newTodos.id) {\n            return { ...item,\n              todos: [...newTodos.todos]\n            };\n          }\n\n          return item;\n        })\n      };\n\n    case 'toggle_complete':\n      const {\n        id\n      } = action;\n      return {\n        list: state.list.map(item => {\n          if (item.id === id) {\n            return { ...item,\n              completed: !item.completed\n            };\n          }\n\n          return item;\n        })\n      };\n\n    case 'create_todo':\n      const {\n        text\n      } = action;\n      const item = {\n        id: Math.floor(Math.random() * 1000),\n        listName: text,\n        todos: []\n      };\n      const list = state.list.concat(item);\n      return {\n        list\n      };\n\n    default:\n      throw new Error('Unknown type: ' + action.type);\n  }\n}\n\nfunction useTodos() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    list\n  } = state;\n  useEffect(() => {\n    dispatch({\n      type: 'read_storage'\n    });\n  }, [dispatch]);\n  useEffect(() => {\n    syncStorage({\n      list\n    });\n  }, [list]);\n\n  const createTask = text => dispatch({\n    type: 'create_todo',\n    text\n  });\n\n  const addTodos = (id, todos) => dispatch({\n    type: 'add_todo',\n    newTodos: {\n      id: id,\n      todos: todos\n    }\n  }); // const createTodo = (text) => dispatch({ type: 'create_todo', text })\n  // const toggleComplete = (id) => dispatch({ type: 'toggle_complete', id })\n\n\n  return {\n    list,\n    createTask,\n    addTodos\n  };\n}\n\nexport default useTodos;","map":{"version":3,"sources":["/home/bhavin/Projects/task/Reactjs-Todo-Example/src/useTodos.js"],"names":["useEffect","useReducer","initialState","list","id","listName","todos","name","status","syncStorage","state","window","localStorage","setItem","JSON","stringify","reducer","action","type","getItem","parse","newTodos","map","item","completed","text","Math","floor","random","concat","Error","useTodos","dispatch","createTask","addTodos"],"mappings":"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","sourcesContent":["import { useEffect, useReducer } from 'react'\n\nconst initialState = {\n  list: [\n    {\n      id: 1,\n      listName: 'Read File',\n      todos: [{ name: 'read all', status: 'completed' }, { name: 'read important', status: 'active' }]\n    },\n    {\n      id: 2,\n      listName: 'Fantasy Football',\n      todos: [{ name: 'Play Football', status: 'completed' }, { name: 'Watch Football', status: 'active' }]\n    },\n    {\n      id: 3,\n      listName: 'Fantasy Cricket',\n      todos: [{ name: 'Play Cricket', status: 'completed' }, { name: 'Watch Cricket', status: 'active' }]\n    }\n  ]\n}\n\nfunction syncStorage(state) {\n  if (window && window.localStorage) {\n    window.localStorage.setItem('appState', JSON.stringify(state))\n  }\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'read_storage':\n      if (window && window.localStorage) {\n        const state = window.localStorage.getItem('appState')\n        if (state && state !== 'undefined') {\n          return JSON.parse(state)\n        }\n      }\n\n      return initialState\n\n    case 'add_todo':\n      const { newTodos } = action;\n\n      return {\n        list: state.list.map(item => {\n          if (item.id === newTodos.id) {\n            return {\n              ...item,\n              todos: [...newTodos.todos]\n            }\n          }\n\n          return item\n        })\n      }\n\n    case 'toggle_complete':\n      const { id } = action\n\n      return {\n        list: state.list.map(item => {\n          if (item.id === id) {\n            return {\n              ...item,\n              completed: !item.completed\n            }\n          }\n\n          return item\n        })\n      }\n    case 'create_todo':\n      const { text } = action\n      const item = {\n        id: Math.floor(Math.random() * 1000),\n        listName: text,\n        todos: []\n      }\n\n      const list = state.list.concat(item)\n      return { list }\n\n    default:\n      throw new Error('Unknown type: ' + action.type);\n  }\n}\n\nfunction useTodos() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { list } = state\n\n  useEffect(() => {\n    dispatch({ type: 'read_storage' })\n  }, [dispatch])\n\n  useEffect(() => {\n    syncStorage({ list })\n  }, [list])\n\n  const createTask = (text) => dispatch({ type: 'create_todo', text })\n  const addTodos = (id, todos) => dispatch({ type: 'add_todo', newTodos: { id: id, todos: todos } });\n  // const createTodo = (text) => dispatch({ type: 'create_todo', text })\n  // const toggleComplete = (id) => dispatch({ type: 'toggle_complete', id })\n\n  return { list, createTask, addTodos }\n}\n\nexport default useTodos"]},"metadata":{},"sourceType":"module"}